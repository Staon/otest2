/*
 * Copyright (C) 2018 Ondrej Starek
 *
 * This file is part of OTest2.
 *
 * OTest2 is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * OTest2 is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with OTest2.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef OTest2INCLUDE_SUITEGENERATED_H_
#define OTest2INCLUDE_SUITEGENERATED_H_

#include <string>

#include <otest2/contextobject.h>
#include <otest2/fcemarshalerptr.h>
#include <otest2/suite.h>

namespace OTest2 {

class Context;

/**
 * @brief Helper class for suites generated by the otest2 preprocessor
 */
class SuiteGenerated : public Suite, public ContextObject {
  private:
    struct Impl;
    Impl* pimpl;

  public:
    /* -- avoid copying */
    SuiteGenerated(
        const SuiteGenerated&) = delete;
    SuiteGenerated& operator =(
        const SuiteGenerated&) = delete;

    /**
     * @brief Ctor
     *
     * @param context_ OTest2 context
     * @param name_ Name of the suite
     */
    explicit SuiteGenerated(
        const Context& context_,
        const std::string& name_);

    /**
     * @brief Dtor
     */
    virtual ~SuiteGenerated();

    /* -- object */
    virtual std::string getName() const;

    /* -- scenario object */
    virtual bool startUpObject(
        const Context& context_,
        int index_) override;
    virtual void scheduleBody(
        const Context& context_,
        ScenarioPtr scenario_,
        ObjectPtr parent_) override;
    virtual void tearDownObject(
        const Context& context_,
        int index_) override;

    /* -- context object */
    virtual const Context& otest2Context() const;

  protected:
    /**
     * @brief Register a fixture (a pair of a start-up and a tear-down functions)
     *
     * @param start_up_ A start-up fuction of the fixture
     * @param tear_down_ A tear-down function of the fixture
     */
    void registerFixture(
        FceMarshalerPtr start_up_,
        FceMarshalerPtr tear_down_);
};

} /* -- namespace OTest2 */

#endif /* -- OTest2INCLUDE_SUITEGENERATED_H_ */
