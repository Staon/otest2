/*
 * Copyright (C) 2019 Ondrej Starek
 *
 * This file is part of OTest2.
 *
 * OTest2 is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * OTest2 is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with OTest2.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <otest2/otest2.h>

#include <iostream>
#include <vector>

#include "runtime.h"

namespace OTest2 {

namespace Test {

TEST_SUITE(ExceptionsSuite) {
  TEST_CASE(MarkedTryCatch) {
    Runtime runtime("ExceptionsSuite", "MarkedTryCatch");

    TEST_SIMPLE() {
      std::vector<const char*> data_{
        "enterTest<selftest>",
        "enterSuite<ExceptionsSuite>",
        "enterCase<MarkedTryCatch>",
        "enterState<AnonymousState>",
        "assert<check 'a == b' has passed>: passed",
        "message<a = 'std::bad_exception'>",
        "message<b = 'std::bad_exception'>",
        "leaveAssert<>",
        "assert<the expected exception is caught>: passed",
        "leaveAssert<>",
        "assert<an exception is expected but no one has occurred>: failed",
        "leaveAssert<>",
        "assert<unexpected exception: foo>: failed",
        "leaveAssert<>",
        "leaveState<AnonymousState>: failed",
        "leaveCase<MarkedTryCatch>: failed",
        "leaveSuite<ExceptionsSuite>: failed",
        "leaveTest<selftest>: failed",
      };

      testAssert(!runtime.runTheTest());
      testAssert(runtime.reporter.checkRecords(data_));
//      runtime.reporter.dumpRecords(std::cout);
    }
  }

  TEST_CASE(UnhandledException) {
    Runtime runtime("ExceptionsSuite", "UnhandledException");

    TEST_SIMPLE() {
      std::vector<const char*> data_{
        "enterTest<selftest>",
        "enterSuite<ExceptionsSuite>",
        "enterCase<UnhandledException>",
        "enterState<AnonymousState>",
        "error<unexpected exception: std::bad_exception>: failed",
        "leaveAssert<>",
        "leaveState<AnonymousState>: failed",
        "leaveCase<UnhandledException>: failed",
        "leaveSuite<ExceptionsSuite>: failed",
        "leaveTest<selftest>: failed",
      };

      testAssert(!runtime.runTheTest());
      testAssert(runtime.reporter.checkRecords(data_));
//      runtime.reporter.dumpRecords(std::cout);
    }
  }
}

} /* -- namespace Test */

} /* -- namespace OTest2 */
