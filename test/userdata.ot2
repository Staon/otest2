/*
 * Copyright (C) 2020 Ondrej Starek
 *
 * This file is part of OTest2.
 *
 * OTest2 is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * OTest2 is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with OTest2.  If not, see <http://www.gnu.org/licenses/>.
 */
#include <otest2/otest2.h>

#include <string>

#include <otest2/userdata.h>

namespace OTest2 {

namespace Test {

TEST_SUITE(UserDataSuite) {
  TEST_CASE(UserDataOperations) {
    TEST_SIMPLE() {
      int int_value_(10);
      std::string str1_("Hello world");
      const std::string& str2_(str1_);

      UserData userdata_;
      userdata_.setDatum("int", &int_value_);
      userdata_.setDatum("str1", &str1_);
      userdata_.setDatum("str2", &str2_);

      /* -- check value */
      testAssertEqual(userdata_.getDatum<int>("int"), 10);
      testAssertEqual(userdata_.getDatum<const int>("int"), 10);

      /* -- modify value */
      userdata_.getDatum<int>("int") = 13;
      testAssertEqual(userdata_.getDatum<int>("int"), 13);
      userdata_.getDatum<int&>("int") = 666;
      testAssertEqual(userdata_.getDatum<int>("int"), 666);

      /* -- the string value - by value type and by reference type */
      testAssertEqual(userdata_.getDatum<std::string>("str1"), "Hello world");
      testAssertEqual(userdata_.getDatum<std::string&>("str1"), "Hello world");
      testAssertEqual(userdata_.getDatum<const std::string>("str1"), "Hello world");
      testAssertEqual(userdata_.getDatum<const std::string&>("str1"), "Hello world");

      /* -- stored constant object */
      testTry {
        testAssertEqual(userdata_.getDatum<std::string>("str2"), "Hello world");
      }
      testCatch(UserDataWrongTypeException&, exc_) {
        /* -- I don't check the message because it's platform dependent */
      }
      testTry {
        testAssertEqual(userdata_.getDatum<std::string&>("str2"), "Hello world");
      }
      testCatch(UserDataWrongTypeException&, exc_) {
        /* -- I don't check the message because it's platform dependent */
      }
      testAssertEqual(userdata_.getDatum<const std::string>("str2"), "Hello world");
      testAssertEqual(userdata_.getDatum<const std::string&>("str2"), "Hello world");
    }
  }
}

} /* -- namespace Test */

} /* -- namespace OTest2 */
